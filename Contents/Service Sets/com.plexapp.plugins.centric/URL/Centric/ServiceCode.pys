RE_VIDEO_ID = Regex('http://www.centrictv.com/videos/.+?/([0-9]+)/.*')
MRSS_URL = "http://services.centrictv.com/content/video/mrss.aspx?uri=mgid:media:video:centrictv.com:%s"

def NormalizeURL(url):
    return url
    
def MetadataObjectForURL(url):
    data = HTML.ElementFromURL(url)
    details = data.xpath('//div[@id="video-detail-meta"]')[0]
    title = data.xpath('//meta[@name="title"]')[0].get('content')
    summary = details.xpath('.//p[@class="video-dscpn"]')[0].text
    try:
        date = details.xpath('.//p[@class="subtitle"]')[0].text.split('Posted ')[1]
        date = Datetime.ParseDate(date)
    except:
        date = None
    mo = VideoClipObject(
        title = title,
        summary = summary,
        originally_available_at = date,
        thumb = Callback(GetThumb, url))
    return mo
    
def MediaObjectsForURL(url):
    return [
        MediaObject(
            parts = [
                PartObject(key=Callback(PlayVideo, url=url, bitrate='1400', index=0)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='1400', index=1)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='1400', index=2)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='1400', index=3))
            ],
            video_resolution = '360',
            bitrate = '1400',
            audio_channels = 2
        ),
        MediaObject(
            parts = [
                PartObject(key=Callback(PlayVideo, url=url, bitrate='900', index=0)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='900', index=1)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='900', index=2)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='900', index=3))
            ],
            video_resolution = '360',
            bitrate = '900',
            audio_channels = 2
        ),
        MediaObject(
            parts = [
                PartObject(key=Callback(PlayVideo, url=url, bitrate='650', index=0)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='650', index=1)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='650', index=2)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='650', index=3))
            ],
            video_resolution = '288',
            bitrate = '650',
            audio_channels = 2
        ),
        MediaObject(
            parts = [
                PartObject(key=Callback(PlayVideo, url=url, bitrate='350', index=0)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='350', index=1)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='350', index=2)),
                PartObject(key=Callback(PlayVideo, url=url, bitrate='350', index=3))
            ],
            video_resolution = '288',
            bitrate = '350',
            audio_channels = 2
        ),
    ]
        
def PlayVideo(url):
    return

def GetMRSS(url):
    video_id = RE_VIDEO_ID.search(url).group(1)
    mRSS = RSS.FeedFromURL(MRSS_URL % video_id)
    return mRSS

def GetThumb(url):
    feed = GetMRSS(url):
    thumb = "http://www.bet.com" + feed.image.link
    return thumb