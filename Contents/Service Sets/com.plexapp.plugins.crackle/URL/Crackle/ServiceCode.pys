DATA_URL = 'http://legacyweb-us.crackle.com/app/revamp/vidwallcache.aspx?flags=-1&fm=%s&partner=20'
THUMB_URL = 'http://images-us-am.crackle.com/%stnl_700x394.jpg'
VIDEO_URL = 'http://media-us-am.crackle.com/%s480p_1mbps.mp4'

RE_MEDIA_ID = Regex('\/(?P<media_id>\d+)')

####################################################################################################
def MetadataObjectForURL(url):

    media_id = RE_MEDIA_ID.search(url).group('media_id')
    xml = XML.ElementFromURL(DATA_URL % (media_id))

    title = xml.xpath('//i/@t')[0]
    summary = xml.xpath('//i/@d')[0]
    thumb = THUMB_URL % (xml.xpath('//i/@p')[0])
    duration = int(xml.xpath('//i/@r')[0], 16)

    return VideoClipObject(
        title = title,
        summary = summary,
        thumb = Resource.ContentsOfURLWithFallback(url=thumb),
        duration = duration
    )

####################################################################################################
def MediaObjectsForURL(url):

    return [
        MediaObject(
            container = Container.MP4,
            video_codec = VideoCodec.H264,
            audio_codec = AudioCodec.AAC,
            video_resolution = 480,
            optimized_for_streaming = True,
            audio_channels = 2,
            parts = [
                PartObject(key=Callback(PlayVideo, url=url))
            ]
        )
    ]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):

    media_id = RE_MEDIA_ID.search(url).group('media_id')
    xml = XML.ElementFromURL(DATA_URL % (media_id))

    path = xml.xpath('//i/@p')[0]

    return IndirectResponse(VideoClipObject, key=VIDEO_URL % (path))
