import re

BASE_URL = 'http://video.euronews.net/'

EUROLIVE = 'http://www.euronews.net/media/player_live_1_11.swf'

####################################################################################################
def MetadataObjectForURL(url):

    page = HTML.ElementFromURL(url)

    # Extract the details available directly form the page.
    title = page.xpath("//head//meta[@property='og:title']")[0].get('content')
    description = page.xpath("//head//meta[@name='description']")[0].get('content')
    thumb = page.xpath("//head//meta[@property='og:image']")[0].get('content')

    return VideoClipObject(
        title = title,
        summary = description,
        thumb = thumb)

####################################################################################################
def MediaObjectsForURL(url):

    # If a live channel has been specified, then we should return a suitable webkit based MediaObject.
    # This is really only used by the actual plugin when dealing with Live channels.
    if url.startswith(EUROLIVE) == True:
        return [
            MediaObject(
                protocol = 'webkit',
                parts = [PartObject(key=WebVideoURL(url))]
            )
        ]

    return [
      MediaObject(
        video_codec = VideoCodec.VP6,
        audio_codec = AudioCodec.MP3,
        container = 'flv',
        parts = [PartObject(key=Callback(PlayVideo, url = url))]
      )
    ]

####################################################################################################
def PlayVideo(url):

    # Request the url
    page = HTML.StringFromElement(HTML.ElementFromURL(url))

    # The source of the page actually contains a link to the associated flv file. We can simply find
    # this by using a regular expression to find it. Then, we just redirect.
    video_url = re.match('.*videofile:"(?P<video_url>[^"]+)".*', page, re.DOTALL).groupdict()['video_url'] + ".flv"

    return Redirect(BASE_URL + video_url)

####################################################################################################
def TestURLs():
    test_urls = []

    page = HTML.ElementFromURL('http://www.euronews.net/')

    for link in page.xpath("//span[@class='vid']/.."):
        if len(test_urls) < 3:
            url = link.get('href')
            url = "http://www.euronews.net" + url

            if url not in test_urls:
                test_urls.append(url)


        else:
            break

    return test_urls