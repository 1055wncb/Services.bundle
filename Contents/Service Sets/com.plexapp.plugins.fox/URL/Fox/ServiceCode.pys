RE_VIDEO_DETAILS = Regex('video: ({"id":.+?"}),', Regex.DOTALL)

####################################################################################################
def MetadataObjectForURL(url):

	video = GetDetails(url)

	episode_title = video['name']
	summary = video['shortDescription']
	show = video['category'].split('Series/')[1]
	thumbs = [video['videoStillURL'], video['thumbnailURL']]
	duration = int(video['length'])*1000
	index = int(video['episode'])
	season = int(video['season'])
	rating = video['rating']
	date = Datetime.ParseDate(video['airdate']).date()

	return EpisodeObject(title=episode_title, show=show, summary=summary, index=index,
		season=season, duration=duration, content_rating=rating, originally_available_at=date,
		thumb=Resource.ContentsOfURLWithFallback(url=thumbs, fallback='icon-default.png')
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			parts = [PartObject(key = WebVideoURL(url))],
			protocol = 'webkit'
		)
	]

####################################################################################################
def GetDetails(url):

	content = HTTP.Request(url).content
	video = JSON.ObjectFromString(RE_VIDEO_DETAILS.search(content).group(1))

	return video
