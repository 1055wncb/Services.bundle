API_KEY = '70d735e54938286d6d9142727877107ced20e5ff'
HTTP_HEADERS = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:18.0) Gecko/20100101 Firefox/18.0'}

####################################################################################################
def NormalizeURL(url):

	return url.split('?')[0]

####################################################################################################
def MetadataObjectForURL(url):

	clip = GetClip(url)

	title = clip['name']
	summary = clip['deck']
	thumbUrl = clip['image']['super_url']
	date = Datetime.ParseDate(clip['publish_date']).date()

	return VideoClipObject(
		title = title,
		summary = summary,
		thumb = thumbUrl,
		originally_available_at = date
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			parts = [PartObject(key=Callback(PlayVideo, url=url, fmt='hi'))],
			container = 'mp4',
			bitrate = 1500,
			optimized_for_streaming = True,
			video_resolution = 'sd',
			#aspect_ratio = '1.78',
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			audio_channels = 2
		),
		MediaObject(
			parts = [PartObject(key=Callback(PlayVideo, url=url, fmt='lo'))],
			container = 'mp4',
			bitrate = 700,
			optimized_for_streaming = True,
			video_resolution = 'sd',
			#aspect_ratio = '1.78',
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			audio_channels = 2
		)
	]

####################################################################################################
@indirect
def PlayVideo(url, fmt=''):

	clip = GetClip(url)

	if fmt == 'hi':
		video_url = clip['high_url']
	elif fmt == 'lo':
		video_url = clip['low_url']

	return IndirectResponse(VideoClipObject, key=video_url)

####################################################################################################
def GetClip(url):

	video_id = url.split('-')[-1].strip('/')
	clip_detail_url = 'http://api.giantbomb.com/video/%s/?api_key=%s&format=json' % (video_id, API_KEY)

	try:
		data = JSON.ObjectFromURL(clip_detail_url)
	except:
		raise Ex.MediaNotAvailable

	if 'status_code' not in data or data['status_code'] != 1:
		raise Ex.MediaNotAvailable

	return(data['results'])
