RE_FILE_URL = Regex('&file_url=(?P<url>[^&]*)&')

####################################################################################################
def MetadataObjectForURL(url):

	page = HTML.ElementFromURL(url)

	# Extract the details available directly form the page.
	title = page.xpath("//head//title/text()")[0]
	description = page.xpath("//head//meta[@property='og:description']")[0].get('content')
	thumb = page.xpath("//head//meta[@property='og:image']")[0].get('content')

	return VideoClipObject(
		title = title,
		summary = description,
		thumb = thumb
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			parts = [PartObject(key=Callback(PlayVideo, url = url))],
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			container = Container.MP4,
			audio_channels = 2,
			optimized_for_streaming = True
		)
	]

####################################################################################################
def PlayVideo(url):

	page_content = HTTP.Request(url).content

	# Find the video url from inside the player's config
	video_url = RE_FILE_URL.search(page_content).group('url')
	return Redirect(String.Unquote(video_url))
