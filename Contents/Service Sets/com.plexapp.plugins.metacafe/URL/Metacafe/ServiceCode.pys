VIDEO_URL = '%s?__gda__=%s'

RE_RANK = Regex('&rank=(?P<rank>[^&]*)')
RE_DURATION = Regex('&duration=(?P<duration>[^&]*)')
RE_MEDIA = Regex('mediaData=(?P<media>[^&]+)')

####################################################################################################
def MetadataObjectForURL(url):

	page = HTML.ElementFromURL(url)

	title = page.xpath('//meta[@property="og:title"]')[0].get('content')
	summary = page.xpath('//meta[@property="og:description"]')[0].get('content')
	thumb = page.xpath('//meta[@property="og:image"]')[0].get('content')
	tags = page.xpath('//dl[@id="Tags"]/dd/a/text()')
	date = page.xpath('//div[@id="MetaData"]//li/strong[text()="Added :"]/following-sibling::text()')[0].strip()
	date = Datetime.ParseDate(date)

	# The flash variables actually contain additional information about the title. We should therefore extract this from here too.
	flash_vars_encoded = page.xpath('//object/param[@id="flashVars"]')[0].get('value')
	flash_vars = String.Unquote(flash_vars_encoded)

	rating = float(RE_RANK.search(flash_vars).group('rank'))
	duration = int(RE_DURATION.search(flash_vars).group('duration')) * 1000

	return VideoClipObject(
		title = title,
		summary = summary,
		thumb = thumb,
		originally_available_at = date,
		duration = duration,
		rating = rating,
		tags = tags
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			container = 'mp4',
			video_resolution = '720',
			optimized_for_streaming = True,
			parts = [PartObject(key=Callback(PlayVideo, url=url, res='hd'))]
		),
		MediaObject(
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			container = 'mp4',
			video_resolution = 'sd',
			optimized_for_streaming = True,
			parts = [PartObject(key=Callback(PlayVideo, url=url, res='sd'))]
		)
	]

####################################################################################################
def PlayVideo(url, res):

	page = HTML.ElementFromURL(url, cacheTime=0)

	flash_vars_encoded = page.xpath('//object/param[@id="flashVars"]')[0].get('value')
	flash_vars = String.Unquote(flash_vars_encoded)

	media = JSON.ObjectFromString(RE_MEDIA.search(flash_vars).group('media'))

	if res == 'hd' and 'highDefinitionMP4' in media:
		video_url = media['highDefinitionMP4']['mediaURL']
		key = media['highDefinitionMP4']['access'][0]['value']
	elif 'MP4' in media:
		video_url = media['MP4']['mediaURL']
		key = media['MP4']['access'][0]['value']
	else:
		video_url = media['flv']['mediaURL']
		key = media['flv']['access'][0]['value']

	return Redirect(VIDEO_URL % (video_url.replace(' ', '%20'), key))
