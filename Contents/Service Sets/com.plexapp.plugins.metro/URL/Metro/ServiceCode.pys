import re

VIDEO_DETAILS_URL = 'http://c.brightcove.com/services/viewer/htmlFederated?&width=1000&height=512&playerID=%s&@videoPlayer=%s'

####################################################################################################

def MetadataObjectForURL(url):
    try:

        # Attempt to extract the details of the title from the page.
        page = HTML.ElementFromURL(url)

        # The page only currently contains the title and a brief description
        title = page.xpath("//meta[@property='og:title']")[0].get('content')
        summary = page.xpath("//meta[@name='description']")[0].get('content')
        thumb = page.xpath("//meta[@property='og:image']")[0].get('content')

        return VideoClipObject(
            title = title,
            summary = summary,
            thumb = thumb)

    except:
        Log.Exception("An error occurred while attempting to retrieve the required meta data.")

####################################################################################################

def MediaObjectsForURL(url):
    return [
      MediaObject(
        video_codec = VideoCodec.H264,
        audio_codec = AudioCodec.AAC,
        container = Container.MP4,
        optimized_for_streaming = True,
        parts = [PartObject(key=Callback(PlayVideo, url = url))],
        audio_channels = 2
      )
    ]

####################################################################################################

def PlayVideo(url):
    content = HTTP.Request(url).content
    playerId = re.search('param name="playerID" value="([0-9]+)"', content).group(1)
    videoId = re.search('param name="@videoPlayer" value="([0-9]+)"', content).group(1)

    video_details_page = HTTP.Request(VIDEO_DETAILS_URL % (playerId, videoId)).content
    experience = re.search('var experienceJSON = (.+)};', video_details_page).group(1) + '}'
    details = JSON.ObjectFromString(experience)

    video_url = details['data']['programmedContent']['videoPlayer']['mediaDTO']['FLVFullLengthURL']
    return Redirect(video_url)