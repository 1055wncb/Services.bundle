####################################################################################################

def NormalizeURL(url):
  return url

####################################################################################################

def MetadataObjectForURL(url):
  data = HTML.ElementFromURL(url)
  video_title = data.xpath('//meta[@name="mtvn_title"]')[0].get('content')
  artist = data.xpath('//meta[@name="mtvn_artist"]')[0].get('content')
  title = '%s - %s' % (artist, video_title)
  date = Datetime.ParseDate(data.xpath('//meta[@name="mtvn_date"]')[0].get('content')).date()
  thumb = data.xpath('//meta[@name="thumbnail"]')
  
  oc = VideoClipObject(
    title = title,
    originally_available_at = date,
    thumb = Resource.ContentsOfURLWithFallback(url=thumb, fallback='icon-default.png')
  )
  
  return oc
  
####################################################################################################
def MediaObjectsForURL(url):
  return [
    (
      MediaObject(
        parts = [PartObject(key=WebVideoURL(url))]
      )
    )
  ]
