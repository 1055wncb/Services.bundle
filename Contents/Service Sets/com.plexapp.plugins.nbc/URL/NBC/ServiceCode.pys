VIDEO_DETAILS = 'http://videoservices.nbcuni.com/player/clip?clear=true&geoIP=US&clipId=%s'
XML_NS = {'a':'http://videoservices.nbcuni.com/schema/player'}
THUMB_URL = 'http://video.nbc.com/player/mezzanine/image.php?w=640&h=360&trusted=yes&path=/%s'
RE_VIDEO_ID = Regex('(nbc|latenightwithjimmyfallon|jaylenosgarage).com/((?!Vintage_Shows).+/)?video/.+?/(?P<id>n?[0-9]{4,})')

####################################################################################################
def NormalizeURL(url):

	return url

####################################################################################################
def MetadataObjectForURL(url):

	video_id = RE_VIDEO_ID.search(url)

	if not video_id:
		return None

	xml = XML.ElementFromURL(VIDEO_DETAILS % video_id.group('id'))

	# Check for errors
	error = xml.xpath('//a:errordis', namespaces=XML_NS)

	if len(error) == 1:
		if error[0].text == 'clip expired':
			raise Ex.MediaExpired
		else:
			raise Ex.MediaNotAvailable

	show = xml.xpath('//a:show', namespaces=XML_NS)[0].text
	title = xml.xpath('//a:headline', namespaces=XML_NS)[0].text

	try:
		summary = xml.xpath('//a:description', namespaces=XML_NS)[0].text
	except:
		try:
			summary = xml.xpath('//a:longDescription', namespaces=XML_NS)[0].text
		except:
			summary = None

	try:
		thumb = xml.xpath('//a:mezznimagepath', namespaces=XML_NS)[0].text
		thumb = THUMB_URL % thumb
	except:
		thumb = ''

	try:
		if xml.xpath('//a:clipContentType', namespaces=XML_NS)[0].text == 'Full Episode':
			video_type = "Full Episode"
		else:
			video_type = "Clip"
	except:
		video_type = "Clip"

	if video_type == 'Full Episode':
		return EpisodeObject(
			show = show,
			title = title,
			summary = summary,
			thumb = Resource.ContentsOfURLWithFallback(url=thumb, fallback='icon-default.png')
		)
	else:
		return VideoClipObject(
			title = title,
			summary = summary,
			thumb = Resource.ContentsOfURLWithFallback(url=thumb, fallback='icon-default.png')
		)

####################################################################################################
def MediaObjectsForURL(url):

	video_id = RE_VIDEO_ID.search(url)

	if not video_id:
		return None

	video_url = 'http://resources-cdn.plexapp.com/html/support/com.plexapp.plugins.nbc.html#%s' % video_id.group('id')

	return [
		MediaObject(
			parts = [PartObject(key=WebVideoURL(video_url))]
		)
	]

####################################################################################################
def TestURLs():

	test_urls = []
	page = HTML.ElementFromURL('http://www.nbc.com/video/library/')

	# Full episodes
	result = page.xpath('//div[@id="header-full-eps"]//li/a/@href')[0:2]
	for url in result:
		if not url.startswith('http://'):
			url = 'http://www.nbc.com%s' % url
		test_urls.append(url)

	# Video clips
	result = page.xpath('//div[@id="header-video-clips"]//li/a/@href')[0:2]
	for url in result:
		if not url.startswith('http://'):
			url = 'http://www.nbc.com%s' % url
		test_urls.append(url)

	return test_urls
