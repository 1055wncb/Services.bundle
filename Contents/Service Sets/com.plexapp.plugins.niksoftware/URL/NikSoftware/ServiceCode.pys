import re

BASE_URL = 'http://www.niksoftware.com'

def NormalizeURL(url):
    return url
    
def MetadataObjectForURL(url):
    content = HTTP.Request(url).content
    video_data = HTML.ElementFromString(content).xpath('//div[@id="player"]')[0]
    
    title = video_data.xpath('//div[@id="title"]/h2')[0].text
    summary = video_data.xpath('//div[@id="title"]/p')[0].text
    tags = []
    for tag in video_data.xpath('//div[@id="tags"]//span'):
        tags.append(tag.text)
    date = video_data.xpath('//div[@id="details"]/span')[0].text.strip('Added: ')
    duration = video_data.xpath('//div[@id="details"]/span')[2].text.strip('Runtime: ')
    duration = (int(duration.split(':')[0])*60 + int(duration.split(':')[1]))*1000
    thumb = BASE_URL + re.search("image:'(/learnmore/.+)',", content).group(1)
    
    mo = VideoClipObject(
        title = title,
        summary = summary,
        tags = tags,
        originally_available_at = Datetime.ParseDate(date).date(),
        duration = duration,
        thumb = thumb
    )
    
    return mo
    
def MediaObjectsForURL(url):
    return [
      MediaObject(
        video_codec = VideoCodec.H264,
        audio_codec = AudioCodec.AAC,
        container = Container.MP4,
        video_resolution = '720',
        optimized_for_streaming = True,
        audio_channels = 2,
        parts = [PartObject(key=Callback(PlayVideo, url = url))]
      )
    ]
    
def PlayVideo(url):
    data = HTML.ElementFromURL(url)
    m4v_url = data.xpath('//a[@class="download"]')[0].get('href')
    return Redirect(m4v_url)