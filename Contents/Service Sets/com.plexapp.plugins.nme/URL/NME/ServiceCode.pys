HTTP.CacheTime = CACHE_1DAY
httpHeaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/536.26.17 (KHTML, like Gecko) Version/6.0.2 Safari/536.26.17'}

VIDEO_DETAILS_URL = 'http://c.brightcove.com/services/viewer/htmlFederated?&width=1000&height=512&playerID=%s&@videoPlayer=%s'

RE_PLAYER_ID = Regex('param name="playerID" value="([0-9]+)"')
RE_VIDEOPLAYER = Regex('param name="@videoPlayer" value="([0-9]+)"')
RE_JSON = Regex('var experienceJSON = (.+)};')

####################################################################################################
def MetadataObjectForURL(url):

	page = HTML.ElementFromURL(url, headers=httpHeaders)

	# Extract the details available directly form the page.
	title = page.xpath("//meta[@property='og:title']")[0].get('content')
	thumb = page.xpath("//meta[@property='og:image']")[0].get('content')
	description = page.xpath("//meta[@property='og:description']")[0].get('content')

	return VideoClipObject(
		title = title,
		summary = description,
		thumb = thumb
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			container = Container.MP4,
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			parts = [PartObject(key=Callback(PlayVideo, url=url))],
			audio_channels = 2
		)
	]

####################################################################################################
@indirect
def PlayVideo(url):

	content = HTTP.Request(url, headers=httpHeaders).content
	playerId = RE_PLAYER_ID.search(content).group(1)
	videoId = RE_VIDEOPLAYER.search(content).group(1)

	video_details_page = HTTP.Request(VIDEO_DETAILS_URL % (playerId, videoId), headers=httpHeaders).content
	experience = RE_JSON.search(video_details_page).group(1) + '}'
	details = JSON.ObjectFromString(experience)

	video_url = details['data']['programmedContent']['videoPlayer']['mediaDTO']['FLVFullLengthURL']
	return IndirectResponse(VideoClipObject, key=video_url)
