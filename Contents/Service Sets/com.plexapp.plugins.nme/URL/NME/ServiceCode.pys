HTTP.CacheTime = CACHE_1DAY
HTTP_HEADERS = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_2) AppleWebKit/536.26.17 (KHTML, like Gecko) Version/6.0.2 Safari/536.26.17'}

VIDEO_DETAILS_URL = 'http://c.brightcove.com/services/viewer/htmlFederated?playerID=%s&@videoPlayer=%s'

RE_PLAYER_ID = Regex('param name="playerID" value="(\d+)"')
RE_VIDEOPLAYER = Regex('param name="@videoPlayer" value="(\d+)"')
RE_JSON = Regex('var experienceJSON = (\{.+\});')

####################################################################################################
def MetadataObjectForURL(url):

	html = HTML.ElementFromURL(url, headers=HTTP_HEADERS)

	# Extract the details available directly form the page.
	title = html.xpath('//meta[@property="og:title"]/@content')[0]
	summary = html.xpath('//meta[@property="og:description"]/@content')[0]
	thumb = html.xpath('//meta[@property="og:image"]/@content')[0]

	return VideoClipObject(
		title = title,
		summary = summary,
		thumb = thumb
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			parts = [
				PartObject(key=Callback(PlayVideo, url=url))
			],
			container = Container.MP4,
			video_codec = VideoCodec.H264,
			video_resolution = 'sd',
			audio_codec = AudioCodec.AAC,
			audio_channels = 2
		)
	]

####################################################################################################
@indirect
def PlayVideo(url):

	content = HTTP.Request(url, headers=HTTP_HEADERS).content
	player_id = RE_PLAYER_ID.search(content).group(1)
	video_id = RE_VIDEOPLAYER.search(content).group(1)

	video_details_page = HTTP.Request(VIDEO_DETAILS_URL % (player_id, video_id), headers=HTTP_HEADERS).content
	experience = RE_JSON.search(video_details_page).group(1)
	details = JSON.ObjectFromString(experience)

	video_url = details['data']['programmedContent']['videoPlayer']['mediaDTO']['FLVFullLengthURL']
	return IndirectResponse(VideoClipObject, key=video_url)
