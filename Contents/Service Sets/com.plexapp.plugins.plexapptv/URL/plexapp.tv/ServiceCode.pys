####################################################################################################
def NormalizeURL(url):

	return url

####################################################################################################
def MetadataObjectForURL(url):

	html = HTML.ElementFromURL(url)

	title = html.xpath('//meta[@property="og:title"]')[0].get('content')
	summary = html.xpath('//meta[@property="og:description"]')[0].get('content')
	thumb = html.xpath('//meta[@property="og:image"]')[0].get('content')
	video_url = html.xpath('//iframe/@src')[0]

	return VideoClipObject(
		title = title,
		summary = summary,
		thumb = Resource.ContentsOfURLWithFallback(url=thumb, fallback='SourceIcon.png'),
		items = [
			MediaObject(
				parts = [PartObject(key=WebVideoURL(video_url))]
			)
		]
	)
