import re

VIDEO_DETAILS_URL = 'http://c.brightcove.com/services/viewer/htmlFederated?&width=1000&height=512&playerID=%s&@videoPlayer=%s'

####################################################################################################

def MetadataObjectForURL(url):

    page = HTML.ElementFromURL(url)

    title = page.xpath("//h1[@class = 'videoTitle']/text()")[0]
    description = page.xpath("//meta[@name = 'description']")[0].get('content')
    thumb = page.xpath("//link[@rel='image_src']")[0].get('href')
    tags = page.xpath("//meta[@name = 'keywords']")[0].get('content').split(',')
    tags = [ tag.strip() for tag in tags ]

    date = page.xpath("//div[@class = 'videoInfo']//span[@class = 'date']/text()")[0]
    date = Datetime.ParseDate(date)

    duration_text = page.xpath("//div[@class = 'videoInfo']//span[@class = 'length']/text()")[0]
    duration_dict = re.match("(?P<mins>[0-9]+):(?P<secs>[0-9]+) .+", duration_text).groupdict()
    mins = int(duration_dict['mins'])
    secs = int(duration_dict['secs'])
    duration = ((mins * 60) + secs) * 1000

    return VideoClipObject(
        title = title,
        summary = description,
        thumb = thumb,
        duration = duration,
        originally_available_at = date,
        tags = tags)

####################################################################################################

def MediaObjectsForURL(url):
    return [
      MediaObject(
        container = Container.MP4,
        video_codec = VideoCodec.H264,
        audio_codec = AudioCodec.AAC,
        parts = [PartObject(key=Callback(PlayVideo, url = url))],
        audio_channels = 2
      )
    ]

####################################################################################################

def PlayVideo(url):
    content = HTML.ElementFromURL(url)
    playerId = content.xpath("//param[@name='playerID']")[0].get('value')
    videoId = content.xpath("//param[@name='@videoPlayer']")[0].get('value')

    video_details_page = HTTP.Request(VIDEO_DETAILS_URL % (playerId, videoId)).content
    experience = re.search('var experienceJSON = (.+)};', video_details_page).group(1) + '}'
    details = JSON.ObjectFromString(experience)

    video_url = details['data']['programmedContent']['videoPlayer']['mediaDTO']['FLVFullLengthURL']
    return Redirect(video_url)