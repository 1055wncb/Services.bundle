XL_URL = 'http://www.rtl.nl/xl/#/u/%s/'
XL_SNACKS_URL = 'http://www.rtl.nl/xl/#/snacks/u/%s/'
XL_DATA_URL = 'http://www.rtl.nl/system/s4m/xldata/abstract/%s'
THUMB_URL = 'http://data.rtl.nl/system/img//%s.jpg'

HTTP.CacheTime = CACHE_1DAY

RE_UUID = Regex('([a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12})')

####################################################################################################
def NormalizeURL(url):

	uuid = RE_UUID.search(url)

	if uuid:
		if '/snacks/' in url:
			url = XL_SNACKS_URL % uuid.group(1)
		else:
			url = XL_URL % uuid.group(1)

	return url

####################################################################################################
def MetadataObjectForURL(url):

	uuid = RE_UUID.search(url).group(1)
	url = XL_DATA_URL % uuid
	material_node = HTML.ElementFromURL(url).xpath('//material[@key="' + uuid + '"]')

	if len(material_node) < 1:
		raise Ex.MediaNotAvailable
	else:
		data = material_node[0]

	try: title = data.xpath('./title')[0].text
	except: raise Ex.MediaNotAvailable

	studio = data.xpath('./broadcast_station_display')[0].text

	try: summary = data.xpath('./synopsis')[0].text
	except: summary = None

	broadcast = data.xpath('./broadcast_date_display')[0].text
	broadcast = Datetime.FromTimestamp(float(broadcast))
	originally_available_at = Datetime.ParseDate(str(broadcast)).date()

	duration = data.xpath('./length')[0].text

	thumb_id = data.xpath('./thumbnail_id')[0].text
	thumb = THUMB_URL % thumb_id

	video = VideoClipObject(
		title = title,
		summary = summary,
		originally_available_at = originally_available_at,
		studio = studio,
		thumb = thumb
	)

	return video

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			parts = [PartObject(key=WebVideoURL(url))]
		)
	]

####################################################################################################
def TestURLs():

	test_urls = []
	page = HTML.ElementFromURL('http://www.rtl.nl/system/s4m/xldata/home.xml?version=2.0')
	results = page.xpath("//material")

	for item in results:
		video_id = item.get('key')

		if len(video_id) < 2:
			continue

		url = "http://www.rtl.nl/xl/#/u/%s" % video_id
		test_urls.append(url)

		if len(test_urls) >= 2:
			break

	return test_urls
