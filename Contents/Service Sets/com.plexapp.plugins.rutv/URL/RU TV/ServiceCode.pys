RE_VID_ID = Regex('vid=([0-9]+)')
DETAIL_URL = 'http://player.rutv.ru/index/play/vid/%s'

####################################################################################################
def NormalizeURL(url):
	return url

####################################################################################################
def MetadataObjectForURL(url):
	details = GetDetails(url)
	return VideoClipObject(
		title = details['title'],
		summary = details['anons'],
		thumb = details['picture'],
		duration = int(details['duration'])*1000
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			video_resolution = '528',
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			audio_channels = 2,
			optimized_for_streaming = True,
			parts = [PartObject(key=Callback(PlayVideo, url = url, res = 528))]
		),
		MediaObject(
			video_resolution = '480',
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			audio_channels = 2,
			optimized_for_streaming = True,
			parts = [PartObject(key=Callback(PlayVideo, url = url, res = 480))]
		),
		MediaObject(
			video_resolution = '336',
			video_codec = VideoCodec.H264,
			audio_codec = AudioCodec.AAC,
			audio_channels = 2,
			optimized_for_streaming = True,
			parts = [PartObject(key=Callback(PlayVideo, url = url, res = 336))]
		)
	]

####################################################################################################
@indirect
def PlayVideo(url, res):
	details = GetDetails(url)
	
	video_url = None
	
	for stream in details['path']['quality']:
		if int(stream['height']) == 'res':
			video_url = stream['url']
	
	if video_url == None:
		video_url = details['path']['quality'][-1]['url']
	
	return IndirectResponse(VideoClipObject, key=video_url)


####################################################################################################
def GetDetails(url):
	data = HTML.ElementFromURL(url)
	swf_url = data.xpath('//meta[@property="og:video"]')[0].get('content')
	vid_id = RE_VID_ID.search(swf_url).group(1)
	return JSON.ObjectFromURL(DETAIL_URL % vid_id)