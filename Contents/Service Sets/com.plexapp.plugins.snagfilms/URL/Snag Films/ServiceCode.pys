import re

VIDEO_DETAILS_URL = "http://www.snagfilms.com/api/assets.jsp?id=%s"

####################################################################################################

def MetadataObjectForURL(url):
    try:

        # Request the actual page
        page = HTML.ElementFromURL(url)

        # Extract the information available from the page.
        title = page.xpath("//meta[@name='title']")[0].get('content')
        description = page.xpath("//meta[@name='description']")[0].get('content')
        thumb = page.xpath("//link[@rel='image_src']")[0].get('href')
        tags = page.xpath("//meta[@name='keywords']")[0].get('content').split(',')
        date = page.xpath("//meta[@name='date']")[0].get('content')
        date = Datetime.ParseDate(date)

        return VideoClipObject(
            title = title,
            summary = description,
            thumb = thumb,
            tags = tags,
            originally_available_at = date)

    except:
        Log.Exception("An error occurred while attempting to retrieve the required meta data.")

####################################################################################################

def MediaObjectsForURL(url):
    return [
        MediaObject(
          bitrate = 1000,
          protocol = 'webkit',
          parts = [PartObject(key=Callback(PlayVideo, url = url, bitrate = "1000"))]
        ),
        MediaObject(
          bitrate = 500,
          protocol = 'webkit',
          parts = [PartObject(key=Callback(PlayVideo, url = url, bitrate = "500"))]
        )
    ]

####################################################################################################
def PlayVideo(url, bitrate):

    # Request the page
    page = HTML.ElementFromURL(url)

    # Find the video id and use that to get the associated details.
    video_id = page.xpath("//input[@id='film-id']")[0].get('value')
    details = JSON.ObjectFromURL(VIDEO_DETAILS_URL % video_id)

    # Find the url
    url = details['result']['host']

    # Find the requested clip
    clip = details['result']['video'][0]['streamName']
    for item in details['result']['video']:
        if str(item['bitrate']) == bitrate:
            clip = item['streamName']
            break

    # Redirect to the RTMP video...
    return Redirect(RTMPVideoURL(url, clip = clip))
