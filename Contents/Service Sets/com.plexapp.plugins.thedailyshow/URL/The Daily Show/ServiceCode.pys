RE_PLAYER = Regex('http://media.mtvnservices.com/(?P<id>.+(episode|video)[^"]+)')

####################################################################################################
def NormalizeURL(url):

	return url.split('?')[0]

####################################################################################################
def MetadataObjectForURL(url):

	html = HTML.ElementFromURL(url, cacheTime=CACHE_1HOUR)
	page_title = html.xpath('//title')[0].text

	title = html.xpath('//meta[@property="og:title"]')[0].get('content')
	summary = html.xpath('//meta[@property="og:description"]')[0].get('content')
	thumb = html.xpath('//meta[@property="og:image"]')[0].get('content')

	if 'Full Episode' in page_title:

		try:
			air_date = html.xpath('//h1[@class="subTitle"]/text()')[0]
			originally_available_at = Datetime.ParseDate(air_date).date()
		except:
			originally_available_at = None

		return EpisodeObject(
			show = 'The Daily Show',
			title = title,
			summary = summary,
			thumb = Resource.ContentsOfURLWithFallback(url=thumb, fallback='icon-default.png'),
			originally_available_at = originally_available_at
		)

	elif 'Video Clip' in page_title:

		try:
			air_date = html.xpath('//div[@class="airDate"]//a/text()')[0]
			originally_available_at = Datetime.ParseDate(air_date).date()
		except:
			originally_available_at = None

		return VideoClipObject(
			title = title,
			summary = summary,
			thumb = Resource.ContentsOfURLWithFallback(url=thumb, fallback='icon-default.png'),
			originally_available_at = originally_available_at
		)

	else:
		return None

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			parts = [PartObject(key = Callback(PlayVideo, url=url))],
			protocol = 'webkit'
		)
	]

####################################################################################################
@indirect
def PlayVideo(url):

	content = HTTP.Request(url).content
	video_id = RE_PLAYER.search(content).group('id')
	flashlink = 'http://media.mtvnservices.com/player/prime/mediaplayerprime.1.12.1.swf?uri=%s&autoPlay=true' % video_id

	return IndirectResponse(VideoClipObject, key=WebVideoURL(flashlink))
