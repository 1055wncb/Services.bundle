VIDEOSTRIP_URL = 'videostrip://cnti_key:%s/play_key:%s/title:%s'
RE_IDS = Regex('cnti_key=(\d+)&play_key=(\d+)')

####################################################################################################
def NormalizeURL(url):

	return url

####################################################################################################
def MetadataObjectForURL(url):

	url = CreateVideostripURL(url)
	video = URLService.MetadataObjectForURL(url)
	video.source_title = 'Trouw'

	return video

####################################################################################################
def MediaObjectsForURL(url):

	url = CreateVideostripURL(url)
	return URLService.MediaObjectsForURL(url)

####################################################################################################
def CreateVideostripURL(url):

	html = HTML.ElementFromURL(url)
	script_src = html.xpath('//script[contains(@src, "cnti_key")]/@src')

	if len(script_src) < 1:
		raise Ex.MediaNotAvailable

	(cnti_key, play_key) = RE_IDS.search(script_src[0]).group(1, 2)
	title = html.xpath('//title/text()')[0].strip().rsplit(' - Video')[0]

	url = VIDEOSTRIP_URL % (cnti_key, play_key, String.Quote(title))

	return url
