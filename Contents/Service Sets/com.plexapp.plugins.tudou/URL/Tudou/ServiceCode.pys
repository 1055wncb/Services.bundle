HTTP_HEADERS = {'User-Agent': 'Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)'}

RE_SWF_ID = Regex("tudou.com/v/([^/]*)/v.swf")

RE_KEYWORD = Regex(",(segs|pic|kw|desc): *'(.*?)'")
RE_SEGS = Regex(",segs: *'({.+?})'")
RE_VID_URL = Regex(">(.+?)</f>")

####################################################################################################
def NormalizeURL(url):

	query = RE_SWF_ID.search(url)
	if query:
		return "http://www.tudou.com/programs/view/" + query.group(1)
	return url

####################################################################################################
def MetadataObjectForURL(url):

	try:
		page = HTTP.Request(url, headers=HTTP_HEADERS, cacheTime=CACHE_1DAY).content
	except:
		raise Ex.MediaNotAvailable

	page = unicode(page, 'utf-8', errors='ignore')
	meta = dict()
	for keywd, value in RE_KEYWORD.findall(page):
		if keywd == 'segs':
			data = JSON.ObjectFromString(value)
			meta['seconds'] = int(data.itervalues().next()[0]['seconds'])
		else:
			meta[keywd] = value

	return VideoClipObject(
		title = meta['kw'],
		thumb = Resource.ContentsOfURLWithFallback(meta['pic']),
		summary = meta['desc'],
		duration = meta['seconds']
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			parts = [
				PartObject(key = Callback(PlayVideo, url=url))
			],
			#container = 'flv',
			video_codec = VideoCodec.H264,
			#audio_codec = AudioCodec.AAC,
			video_resolution = 'sd',
			audio_channels = 2,
			optimized_for_streaming = True
		)
	]

####################################################################################################
@indirect
def PlayVideo(url):

	try:
		page = HTTP.Request(url, headers=HTTP_HEADERS, cacheTime=CACHE_1DAY).content
	except:
		raise Ex.MediaExpired

	jstr = RE_SEGS.search(page).group(1)
	segs = JSON.ObjectFromString(jstr)

	quality = segs.keys()[0]
	Log.Debug("quality: "+str(quality))

	video_urls = []
	for part in segs[ quality ]:
		part_id = part['k']
		w_url = "http://v2.tudou.com/f?id="+str(part_id)
		w_url += "&hd"+str(quality)
		try:
			page = HTTP.Request(w_url, headers=HTTP_HEADERS, cacheTime=CACHE_1HOUR).content
		except:
			raise Ex.MediaExpired
		video_url = RE_VID_URL.search(page).group(1)
		Log.Debug("resolved: "+video_url)
		video_urls.append( video_url )

	#return IndirectResponse(VideoClipObject, key=video_url)
	c = ObjectContainer()
	c.add(VideoClipObject(items=[MediaObject(parts=[PartObject(key=vurl) for vurl in video_urls])]))
	c.http_headers = HTTP_HEADERS
	c.http_headers['Referer'] = url
	return c
