IFRAME_URL = 'http://player.rutv.ru/index/iframe/video_id/%s'
RE_HTML5_VIDEO = Regex('var html5 = ({.+});')

####################################################################################################
def NormalizeURL(url):

	return url

####################################################################################################
def MetadataObjectForURL(url):

	data = HTML.ElementFromURL(url)

	try:
		title = data.xpath('//meta[@property="og:title"]')[0].get('content')
	except:
		return None

	summary = data.xpath('//meta[@property="og:description"]')[0].get('content')
	thumb = data.xpath('//meta[@property="og:image"]')[0].get('content')

	return VideoClipObject(
		title = title,
		summary = summary,
		thumb = thumb
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			parts = [PartObject(key=Callback(PlayVideo, url=url))],
			container = 'mp4',
			video_resolution = 'sd',
			video_codec = 'h264',
			audio_codec = 'aac',
			audio_channels = 2
		)
	]

####################################################################################################
@indirect
def PlayVideo(url):

	data = HTML.ElementFromURL(url)
	vid = data.xpath('//link[@rel="video_src"]')[0].get('href').split('vid=')[1].split('&')[0]

	page = HTTP.Request(IFRAME_URL % vid).content
	html5 = JSON.ObjectFromString(RE_HTML5_VIDEO.search(page).group(1))

	return IndirectResponse(VideoClipObject, key=html5['video'])
