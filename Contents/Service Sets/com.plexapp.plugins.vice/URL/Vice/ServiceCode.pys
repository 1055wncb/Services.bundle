import re

BASE_URL = "http://www.vice.com%s"
PLAYER_URL = 'http://player.ooyala.com/player.js?embedCode=%s'
MOBILE_PLAYER_URL = 'http://player.ooyala.com/mobile_player.js%s'

####################################################################################################
def NormalizeURL(url):
    return url

####################################################################################################
def MetadataObjectForURL(url):

    data = HTML.ElementFromURL(url)

    # Extract the available information from the page
    title = data.xpath('//meta[@property="og:title"]')[0].get('content')
    description = data.xpath('//meta[@name="description"]')[0].get('content')

#    try: description = String.Decode(description)
#    except: pass

    thumb = data.xpath('//meta[@property="og:image"]')[0].get('content')
    Log(thumb)

    try:
        show_name = title.split('|')[1].strip()
        ep_name = title.split('|')[0].strip()

        return EpisodeObject(
            title = ep_name,
            show = show_name,
            summary = description,
            thumb = thumb)
    except:
        return VideoClipObject(
            title = title,
            summary = description,
            thumb = thumb)

####################################################################################################
def MediaObjectsForURL(url):
    return [
      MediaObject(
        video_codec = VideoCodec.H264,
        audio_codec = AudioCodec.AAC,
        container = Container.MP4,
        video_resolution = 'sd',
        optimized_for_streaming = True,
        audio_channels = 2,
        parts = [PartObject(key=Callback(PlayVideo, url = url))]
      )
    ]

####################################################################################################
def PlayVideo(url):
    
    data = HTML.ElementFromURL(url)

    # The first thing that we need to obtain is the actual "embed code".
    video_url = data.xpath('//meta[@property="og:video"]')[0].get('content')
    embed_code = re.search('embedCode=(.+)&', video_url).group(1)

    # Once we've got this, we can then request the main JS page to do with the actual player. Since it
    # only actually contains JS source, we simply obtain the content.
    player_page = HTTP.Request(PLAYER_URL % embed_code).content

    # The player page will contain a reference to the mobile JS page (including all required parameters).
    # We therefore search for the known url.
    mobile_player_page_args = re.match('.*var mobile_player_url="http://player.ooyala.com/mobile_player.js?(?P<args>[^"]*)".*', player_page, re.DOTALL).groupdict()['args'] + 'ipad'
    mobile_player_page = HTTP.Request(MOBILE_PLAYER_URL % mobile_player_page_args).content

    # We now have the mobile JS player page. 
    stream_json = re.match('.*var streams=window.oo_testEnv\?\[\]:eval\((?P<json>[^)]+)\).*', mobile_player_page, re.DOTALL).groupdict()['json']
    stream_json = stream_json.decode('unicode_escape')[2:]
    stream_details = JSON.ObjectFromString(stream_json)

    return Redirect(stream_details[0]['ipad_url'])

####################################################################################################
def TestURLs():
    test_urls = []

    data = HTML.ElementFromURL(BASE_URL % '/video')

    for vid in data.xpath('//div[@class="most_popular_videos"]//li[@class="story"]'):
        url = BASE_URL % vid.xpath('.//a')[0].get('href')
        test_urls.append(url)

    return test_urls
