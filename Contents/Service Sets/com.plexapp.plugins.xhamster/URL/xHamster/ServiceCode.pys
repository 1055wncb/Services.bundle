VIDEO_URL = 'http://xhamster.com/movies/%s/.html'
RE_THUMB = Regex("'image':'([^']+)'")

####################################################################################################
def NormalizeURL(url):

	if '/xembed.php' in url:
		video_id = url.split('video=')[-1]
		return VIDEO_URL % video_id
	else:
		return url.split('?')[0]

####################################################################################################
def MetadataObjectForURL(url):

	try:
		page = HTTP.Request(url).content
	except:
		raise Ex.MediaNotAvailable

	html = HTML.ElementFromString(page)

	title = html.xpath('//title/text()')[0].rsplit(' - ', 1)[0].strip()

	# A missing description tag means we don't have a video
	try:
		summary = html.xpath('//meta[@name="description"]/@content')[0].split('xHamster.com! ', 1)[-1].strip()
	except:
		raise Ex.MediaNotAvailable

	if summary.startswith('xHamster'):
		summary = None

	try:
		thumb = RE_THUMB.search(page).group(1)
	except:
		thumb = ''

	return VideoClipObject(
		title = title,
		summary = summary,
		thumb = Resource.ContentsOfURLWithFallback(thumb),
		genres = ['XXX','Adult','18+'],
		content_rating = 'X'
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			parts = [PartObject(key=Callback(PlayVideo, url=url))],
			container = Container.MP4,
			video_codec = VideoCodec.H264,
			video_resolution = 'sd',
			audio_codec = AudioCodec.AAC,
			audio_channels = 2
		)
	]

####################################################################################################
@indirect
def PlayVideo(url):

	try:
		html = HTML.ElementFromURL(url)
	except:
		raise Ex.MediaNotAvailable

	#mp4_url = html.xpath('//div[@class="mp4"]/a/@href')
        mp4_url = html.xpath('//div[@class="noFlash"]/a/@href')

	if len(mp4_url) < 1:
		raise Ex.MediaNotAvailable

	#mp4_url = mp4_url[0].split('?mp4File=')[-1]
	mp4_url = String.Unquote(mp4_url[0])

	return IndirectResponse(VideoClipObject, key=mp4_url)
