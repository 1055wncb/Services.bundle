PLAYLIST_URL = 'http://v.youku.com/player/getPlayList/VideoIDS/%s'
M3U8_URL = 'http://v.youku.com/player/getM3U8/vid/%s/type/flv/ts/%d/v.m3u8'
HTTP_HEADERS = {'User-Agent': 'Mozilla/5.0 (iPad; CPU OS 6_0_1 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A523 Safari/8536.25'}

RE_VIDEO_ID_URL = Regex('v_show/id_(?P<video_id>[^.]+)\.html')
RE_VIDEO_ID_HTML = Regex("var videoId = '(?P<video_id>[0-9]+)'")

####################################################################################################
def NormalizeURL(url):

	return url.split('?')[0]

####################################################################################################
def MetadataObjectForURL(url):

	video_id = RE_VIDEO_ID_URL.search(url)

	if not video_id:
		raise Ex.MediaNotAvailable
	else:
		video_id = video_id.group('video_id')

	try:
		html = HTML.ElementFromURL(url, headers=HTTP_HEADERS, cacheTime=CACHE_1DAY)
	except:
		raise Ex.MediaNotAvailable

	title = html.xpath('//meta[@name="title"]/@content')[0]
	summary = html.xpath('//meta[@name="description"]/@content')[0]

	playlist = JSON.ObjectFromURL(PLAYLIST_URL % video_id, headers=HTTP_HEADERS, cacheTime=CACHE_1DAY)
	thumb = playlist['data'][0]['logo']

	return VideoClipObject(
		title = title,
		summary = summary,
		thumb = Resource.ContentsOfURLWithFallback(thumb)
	)

####################################################################################################
def MediaObjectsForURL(url):

	return [
		MediaObject(
			parts = [
				PartObject(
					key = HTTPLiveStreamURL(Callback(PlayVideo, url=url))
				)
			],
			video_resolution = 'sd',
			audio_channels = 2
		)
	]

####################################################################################################
def PlayVideo(url):

	try:
		page = HTTP.Request(url, headers=HTTP_HEADERS, cacheTime=CACHE_1DAY).content
	except:
		raise Ex.MediaExpired

	video_id = RE_VIDEO_ID_HTML.search(page)

	if not video_id:
		raise Ex.MediaNotAvailable
	else:
		video_id = video_id.group('video_id')

	video_url = M3U8_URL % (video_id, Datetime.TimestampFromDatetime(Datetime.Now()))

	return Redirect(video_url)
