import re

DETAILS_URL = 'http://www.absoluteradio.co.uk/_ajax2/media_player.php?mode=flash&id=%s'

####################################################################################################

def MetadataObjectForURL(url):
    try:
       
        # Attempt to extract the video id from the url
        video_id = re.match(".*/player/[^/]*/(?P<id>[0-9]+)/.*", url).groupdict()['id']
 
        # Request the url and the details page
        page = HTML.ElementFromURL(url)
        details_page = XML.ElementFromURL(DETAILS_URL % video_id)

        title = page.xpath("//div[@id='video_container']/h1/text()")[0]
        description = page.xpath("//meta[@name='description']")[0].get('content')
        thumb = details_page.xpath("//item/type[text() = 'image']/../src/text()")[0]
        
        return VideoClipObject(
            title = title,
            summary = description,
            thumb = thumb)

    except:
        Log.Exception("An error occurred while attempting to retrieve the required meta data.")

####################################################################################################

def MediaObjectsForURL(url):
    return [
        MediaObject(
          protocols = [Protocol.RTMP],
          container = Container.MP4,
          # video_resolution = "720", - how do I work this out from an rtmpt stream?
          parts = [PartObject(key=Callback(PlayVideo, url = url, res = "hd"))]
        ),
        MediaObject(
          protocols = [Protocol.RTMP],
          container = Container.MP4,
          video_resolution = "sd",
          parts = [PartObject(key=Callback(PlayVideo, url = url, res = "sd"))]
        )
    ]

####################################################################################################

def PlayVideo(url, res):

    # Request the details pages.
    video_id = re.match(".*/player/[^/]*/(?P<id>[0-9]+)/.*", url).groupdict()['id']
    details_page = XML.ElementFromURL(DETAILS_URL % video_id)

    # Obtain the video's url and replace with the required resolution, if appropriate
    video_url = details_page.xpath("//item/type[text() = 'video']/../src/text()")[0]
    if res == "hd":
        video_url = video_url.replace('sd.mp4','hd.mp4')

    return Redirect(video_url)