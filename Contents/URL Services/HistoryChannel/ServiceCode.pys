####################################################################################################

def MetadataObjectForURL(url):
  
  print "fetch metadata"
  
  data = HTML.ElementFromURL(url)
  details = data.xpath('//div[@class="controller"]')[0]

  title = details.xpath('./h4')[0].text.split(': ')
  show_title = title[0]
  print show_title
  episode_title = title[1]
  print episode_title
  duration = details.xpath('./h4/span')[0].text[1:-2]
  print duration
  durationParts = duration.split(':')
  duration = ((int(durationParts[0])*60) + (int(durationParts[1])))*1000
  print duration
  summary = details.xpath('.//div[@class="copy"]/p')[0].text
  print summary
  thumbUrl = data.xpath('//link[@rel="image_src"]')[0].get('href')
  thumbUrl = None
  print thumbUrl

  # Construct a metadata item
  ec = EpisodeObject(
    title = episode_title,
    show = show_title,
    #duration = duration,
    #season = int(season),
    #index = int(episode),
    #originally_available_at = postedDate,
    summary = summary,
    source_title = 'History Channel',
    thumb = thumbUrl
  )
  return ec

####################################################################################################
def MediaObjectsForURL(url):

  return [(MediaObject(
      parts = [PartObject(key=Callback(PlayVideo, url=url))],
      protocols = [Protocol.WebKit]
        )
      )
    ]


####################################################################################################

def PlayVideo(url):

  return Redirect(WebVideoURL(url))