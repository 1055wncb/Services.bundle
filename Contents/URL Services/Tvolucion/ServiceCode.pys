import re

BASE_URL = 'http://tvolucion.esmas.com/'

def NormalizeURL(url):
    return url
    
def MetadataObjectForURL(url):
    data = HTTP.Request(url, encoding = "iso-8859-1").content
    #Log(data)
    
    title = re.search("videoChapter = '(.+)';", data.decode("iso-8859-1")).group(1)
    #Log(title)
    show = re.search("videoProgram = '(.+)';", data.decode("iso-8859-1")).group(1)
    #Log(show)
    summary = re.search("videoSummary = '(.+)';", data.decode("iso-8859-1")).group(1).encode("iso-8859-1")
    #Log(summary)
    duration = re.search("videoDurationFrme='(.+)';", data.decode("iso-8859-1")).group(1)
    durationParts = duration.split(':')
    duration = (int(durationParts[0])*3600 + int(durationParts[1])*60 + int(durationParts[2]))*1000
    #Log(duration)
    thumb = re.search("videoImgFrame='(http://.+\.jpg)';", data.decode("iso-8859-1")).group(1)
    #Log(thumb)
    
    eo = EpisodeObject(
        title = title.encode("iso-8859-1"),
        show = show,
        summary = summary,
        duration = duration,
        thumb = thumb,
        source_title = "Tvolucion"
    )
    
    return eo

def MediaObjectsForURL(url):
    return [
        MediaObject(
            parts = [PartObject(key=Callback(PlayVideo, url=url))],
            protocol = 'HTTPMP4Video',
            optimized_for_streaming = True,
            container = 'mp4',
            video_resolution = 'sd',
            audio_channels = 2,
            video_codec = VideoCodec.H264,
            audio_codec = AudioCodec.AAC
            )
        ]

def PlayVideo(url):

    data = HTML.ElementFromURL(url+'/ipad')
    
    mp4_url = data.xpath('//video')[0].get('src')
    
    return Redirect(mp4_url)
    
def TestURLs():
    test_urls = []
    data = HTML.ElementFromURL(BASE_URL)
    
    for program_type in data.xpath('//ul[@class="carruselTrack"]'):
        url = program_type.xpath('.//li[@class="trackHeader"]/a')[0].get('href')
        test_urls.append(url)
        
    return test_urls 